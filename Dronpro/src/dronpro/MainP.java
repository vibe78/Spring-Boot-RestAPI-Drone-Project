/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dronpro;

import com.google.gson.Gson;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author VIBE
 */
public class MainP extends javax.swing.JFrame {

    /**
     * Creates new form MainP
     */
    public MainP() {
        initComponents();
                setResizable(false);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        droneview = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Mweight = new javax.swing.JComboBox<>();
        Tname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        droneview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dronpro/image/icons8-closed-eye-24.png"))); // NOI18N
        droneview.setText("View Drone");
        droneview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                droneviewActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dronpro/image/icons8-treatment-list-24.png"))); // NOI18N
        jButton2.setText("Check Loaded Medication For Drone");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dronpro/image/icons8-drone-24(1).png"))); // NOI18N
        jButton3.setText("Load Medication To Drone");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setForeground(new java.awt.Color(51, 51, 51));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dronpro/image/icons8-add-24.png"))); // NOI18N
        jButton4.setText("Add Medications");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dronpro/image/icons8-save-24.png"))); // NOI18N
        jButton9.setText("Save");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dronpro/image/icons8-drone-64.png"))); // NOI18N
        jLabel1.setText("Register Drone");
        jLabel1.setIconTextGap(8);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Model Weight:");

        Mweight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lightweight", "Middleweight", "Cruiserweight", "Heavyweight" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Model Name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(droneview, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Mweight, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(Tname)))
                                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(276, 276, 276))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(droneview, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Tname)
                    .addComponent(Mweight, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addGap(54, 54, 54)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
                /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addMed().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton4ActionPerformed

    private void droneviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_droneviewActionPerformed
        // TODO add your handling code here:
        /*
        *Working on the Action of the view Drone
        */
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewDrone().setVisible(true);
            }
        });

    }//GEN-LAST:event_droneviewActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        //Working on addig to the drone database
        try {
        String name = Tname.getText();
        String box = String.valueOf(Mweight.getSelectedItem());
        // = Mname.getText();
        //String weight_box = String.valueOf(weight.getSelectedItem());
        //int weights = Integer.parseInt(weight_box);
        //int m = "Middleweight";
        System.out.println(name);
        String g = box;
        
        //System.out.println(name);
        //System.out.println(weight_box);
        // chose a Character random from this String 
        String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
         + "0123456789"
         + "abcdefghijklmnopqrstuvxyz"; 
        int n=10;
 
       // create StringBuffer size of AlphaNumericString 
       StringBuilder sb = new StringBuilder(n); 
 
       for (int i = 0; i < n; i++) { 
 
       // generate a random number between 
       // 0 to AlphaNumericString variable length 
       int index  = (int)(AlphaNumericString.length() * Math.random()); 
 
       // add Character one by one in end of sb 
       sb.append(AlphaNumericString 
       .charAt(index)); 
      } 
      System.out.print(sb.toString());
      URL url = new URL("http://localhost:8080/save");
      HttpURLConnection http = (HttpURLConnection)url.openConnection();
      http.setRequestMethod("POST");
      http.setDoOutput(true);
      http.setRequestProperty("Accept", "application/json");
      http.setRequestProperty("Content-Type", "application/json");
      
      

  
      if(name.equals("")){
          JOptionPane.showMessageDialog(null, "Name Can Not Be Empty", "Error Message", JOptionPane.ERROR_MESSAGE);
      }
      else if(box == "Lightweight"&& !name.equals("")){
          
       List arr = new ArrayList();
      
        Gson gson = new Gson();
  
        //String jsonbox = gson.toJson(box);
        //System.out.println("");
        //System.out.println("The out put"+jsonbox);
        dronClass amy = new dronClass(name,100,"IDLE", 100, sb.toString(),box);

      //String data = "{\n  \"battery_capacity\":50,\n  \"state\": \"RETURNING\",\n  \"weight\": 400,\n   \"serialnumber\": \"123456\",\n   \"modelweight\": jsonbox\n}";

      
      String amyJson = gson.toJson(amy);
      System.out.println(amyJson);
       byte[] out = amyJson.getBytes(StandardCharsets.UTF_8);
       OutputStream stream = http.getOutputStream();
      stream.write(out);
      JOptionPane.showMessageDialog(null, "Drone Saved, View Drone");
      System.out.println(http.getResponseCode() + " " + http.getResponseMessage());
      http.disconnect();
      }
      else if(box == "Middleweight" && !name.equals("")){
         List arr = new ArrayList();
        Gson gson = new Gson();
  
        //String jsonbox = gson.toJson(box);
        //System.out.println("");
        //System.out.println("The out put"+jsonbox);
        dronClass amy = new dronClass(name,100,"IDLE", 200, sb.toString(),box);

      //String data = "{\n  \"battery_capacity\":50,\n  \"state\": \"RETURNING\",\n  \"weight\": 400,\n   \"serialnumber\": \"123456\",\n   \"modelweight\": jsonbox\n}";

      
      String amyJson = gson.toJson(amy);
      System.out.println(amyJson);
       byte[] out = amyJson.getBytes(StandardCharsets.UTF_8);
       OutputStream stream = http.getOutputStream();
      stream.write(out);
      JOptionPane.showMessageDialog(null, "Drone Saved, View Drone");
      System.out.println(http.getResponseCode() + " " + http.getResponseMessage());
      http.disconnect();   
      }
      else if(box == "Cruiserweight"&& !name.equals("")){
        List arr = new ArrayList();
        Gson gson = new Gson();
  
        //String jsonbox = gson.toJson(box);
        //System.out.println("");
        //System.out.println("The out put"+jsonbox);
        dronClass amy = new dronClass(name,100,"IDLE", 300, sb.toString(),box);

      //String data = "{\n  \"battery_capacity\":50,\n  \"state\": \"RETURNING\",\n  \"weight\": 400,\n   \"serialnumber\": \"123456\",\n   \"modelweight\": jsonbox\n}";

      
      String amyJson = gson.toJson(amy);
      System.out.println(amyJson);
       byte[] out = amyJson.getBytes(StandardCharsets.UTF_8);
       OutputStream stream = http.getOutputStream();
      stream.write(out);
      JOptionPane.showMessageDialog(null, "Drone Saved, View Drone");
      System.out.println(http.getResponseCode() + " " + http.getResponseMessage());
      http.disconnect(); 
      }
      else if(box == "Heavyweight"&& !name.equals("")){
                   List arr = new ArrayList();
        Gson gson = new Gson();
  
        //String jsonbox = gson.toJson(box);
        //System.out.println("");
        //System.out.println("The out put"+jsonbox);
        dronClass amy = new dronClass(name,100,"IDLE", 400, sb.toString(),box);

      //String data = "{\n  \"battery_capacity\":50,\n  \"state\": \"RETURNING\",\n  \"weight\": 400,\n   \"serialnumber\": \"123456\",\n   \"modelweight\": jsonbox\n}";

      
      String amyJson = gson.toJson(amy);
      System.out.println(amyJson);
       byte[] out = amyJson.getBytes(StandardCharsets.UTF_8);
       OutputStream stream = http.getOutputStream();
      stream.write(out);
      JOptionPane.showMessageDialog(null, "Drone Saved, View Drone");
      System.out.println(http.getResponseCode() + " " + http.getResponseMessage());
      http.disconnect(); 
      }
      
      

      }
      catch (IOException e) {
      e.printStackTrace();
      System.out.println(e);
     }
      
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
               java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadedMed().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
           java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadeMed().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Mweight;
    private javax.swing.JTextField Tname;
    private javax.swing.JButton droneview;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
