/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dronpro;

import static dronpro.Dronpro.parse;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JFrame;

import javax.swing.table.TableModel;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;
/**
 *
 * @author VIBE
 */
public class ViewDrone extends javax.swing.JFrame {
     
     int add;
    /**
     * Creates new form ViewDrone
     */
    public ViewDrone() {
        initComponents();
                setResizable(false);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
       // pack();
        //setExtendedState(JFrame.MAXIMIZED_BOTH);
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
       Get();
       
       holdID.setEditable(false);
       holdID2.setEditable(false);
       
    Dronelistk.addMouseListener(new MouseAdapter() {
    public void mouseClicked(MouseEvent e) {
        holdID.setText("");
        int ValueOfaTable = 0;
        int i =Dronelistk.getSelectedRow();
        TableModel model = Dronelistk.getModel();
       
        holdID.setText(model.getValueAt(add,0).toString());
        holdID2.setText(model.getValueAt(add,1).toString());
        String T=holdID.getText();
        int Key = Integer.parseInt(T);
        add = ValueOfaTable+i;
        System.out.println("The VAlue of "+T);//The Values of the rows
    }
});
    
    
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lays = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Dronelistk = new javax.swing.JTable();
        delete_b = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        holdID = new javax.swing.JTextField();
        holdID2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Dronelistk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Drone Name", "Serial Number", "State", "Weight", "Battery Capacity", "Model Weight"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Dronelistk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DronelistkMouseClicked(evt);
            }
        });
        Dronelistk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DronelistkKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(Dronelistk);

        delete_b.setText("Delete Drone");
        delete_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_bActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 0));
        jLabel1.setText("- Click on any drone at the Table to view Battery level of a drone ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 0));
        jLabel2.setText("- Click on any drone at the Table to add Medication to a given Drone ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 0));
        jLabel3.setText("- Click on any drone and click the delete button to delete");

        holdID.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        holdID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdIDActionPerformed(evt);
            }
        });

        holdID2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        holdID2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holdID2ActionPerformed(evt);
            }
        });

        jLabel4.setText("ID");

        jLabel5.setText("Drone Name");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Delete");

        lays.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(delete_b, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(holdID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(holdID2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        lays.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout laysLayout = new javax.swing.GroupLayout(lays);
        lays.setLayout(laysLayout);
        laysLayout.setHorizontalGroup(
            laysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laysLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(laysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laysLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(laysLayout.createSequentialGroup()
                        .addGroup(laysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(laysLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addGroup(laysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(holdID)
                            .addComponent(holdID2)
                            .addComponent(delete_b, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );
        laysLayout.setVerticalGroup(
            laysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laysLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(laysLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(laysLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(laysLayout.createSequentialGroup()
                        .addComponent(delete_b, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(holdID, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(5, 5, 5)
                        .addComponent(holdID2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(148, 148, 148))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lays)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lays)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void delete_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_bActionPerformed
        // TODO add your handling code here:
        /*
         * This Button holds the delete function to the API
      
        */
            
        
              System.out.println("This is the table value"+add);
  	
               
                TableModel model = Dronelistk.getModel();
                holdID.setText(model.getValueAt(add,0).toString());
                String T=holdID.getText();
                int Key = Integer.parseInt(T);
                
                //int total = Key+70;
                //System.out.println("Display ID"+total);
                
                

               //ItemN.setText(model.getValueAt(i,0).toString());
               //UnitN.setText(model.getValueAt(i,1).toString());
               //stockN.setText(model.getValueAt(i,2).toString());
               //ItemA.setText(model.getValueAt(i,3).toString());
               //Expire_d.setText(model.getValueAt(i,5).toString());
               //cost1.setText(model.getValueAt(i,6).toString());
                /*Variable*/
                
                
		BufferedReader reader;
		String line;
		StringBuffer responseContent = new StringBuffer();
		try {
		        URL url = new URL("http://localhost:8080/delte/"+Key);
                        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
			connection.setRequestMethod("DELETE");
			connection.setConnectTimeout(5000);
			connection.setReadTimeout(5000);
			
			int status = connection.getResponseCode();
			//System.out.println(status);
			JOptionPane.showMessageDialog(null, "Deleted Successfully");
                        Get();
			if(status > 299) {
				reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
				while((line = reader.readLine()) != null) {
					responseContent.append(line);
				}
				reader.close();
			}else {
				reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
				while((line = reader.readLine()) != null) {
					responseContent.append(line);
				}
				reader.close();
			}
			
			
			//parse(responseContent.toString());
		}
		catch(MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}      
        
        
    }//GEN-LAST:event_delete_bActionPerformed

    private void DronelistkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DronelistkMouseClicked
        // TODO add your handling code here:
        /*Table content*/

    }//GEN-LAST:event_DronelistkMouseClicked

    private void holdIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_holdIDActionPerformed

    private void DronelistkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DronelistkKeyPressed
        // TODO add your handling code here:

        
    }//GEN-LAST:event_DronelistkKeyPressed

    private void holdID2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holdID2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_holdID2ActionPerformed
  public void Get(){
     /*
     try{
          droneapi Droneapi = APIclient.getClient().create(droneapi.class);
          droneapi.findAll().enqueue(new Callback<List<DroneList>>(){
              @Override
              public void onResponse(Call<List<DroneList>> call, Response<List<DroneList>>response) {
                 if(response.isSuccessful()){
                     DefaultTableModel defaultTableModel =new DefaultTableModel(); 
                        defaultTableModel.addColumn("id");
                        defaultTableModel.addColumn("serialnumber");
                        defaultTableModel.addColumn("state");
                        defaultTableModel.addColumn("weight");
                        defaultTableModel.addColumn("battery_capacity");
                        defaultTableModel.addColumn("modelweight");
                        for(DroneList Dr :response.body()){
                            defaultTableModel.addRow(new Object[]{
                                Dr.getId(),
                                Dr.getSerialnumber(),
                                Dr.getState(),
                                Dr.getWeight(),
                                Dr.getBattery_capacity(),
                                Dr.getModelweight()
                            });
                        }
                        Dronelist.setModel(defaultTableModel);
                 }
              }

              @Override
              public void onFailure(Call<List<DroneList>> call, Throwable thrwbl) {
                  throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
              }

         
          });
     }catch(Exception e){

     }*/
		System.out.println("Hello");
		BufferedReader reader;
		String line;
		StringBuffer responseContent = new StringBuffer();
		try {
			URL url = new URL("http://localhost:8080/drone");
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
			connection.setRequestMethod("GET");
			connection.setConnectTimeout(5000);
			connection.setReadTimeout(5000);
			
			int status = connection.getResponseCode();
			//System.out.println(status);
			
			if(status > 299) {
				reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
				while((line = reader.readLine()) != null) {
					responseContent.append(line);
				}
				reader.close();
			}else {
				reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
				while((line = reader.readLine()) != null) {
					responseContent.append(line);
				}
				reader.close();
			}
			
			
			parse(responseContent.toString());
                        
                        
                        
    		System.out.println("Action");
		JSONArray con = new JSONArray(responseContent.toString());
                    DefaultTableModel defaultTableModel =new DefaultTableModel(); 
                    defaultTableModel.addColumn("id");
                    defaultTableModel.addColumn("name");
                    defaultTableModel.addColumn("serialnumber");
                    defaultTableModel.addColumn("state");
                    defaultTableModel.addColumn("weight");
                    defaultTableModel.addColumn("battery_capacity");
                    defaultTableModel.addColumn("modelweight");
                  
		for(int i=0; i<con.length(); i++) {
			JSONObject cons = con.getJSONObject(i);
                      defaultTableModel.addRow(new Object[]{
                                cons.getInt("id"),
                                cons.getString("name"),
                                cons.getString("serialnumber"),
                                cons.getString("state"),
                                cons.getInt("weight"),
                                cons.getInt("battery_capacity"),
                                cons.getString("modelweight"),
                            });
			
		}
		Dronelistk.setModel(defaultTableModel);                   
                        
                        
                        
                        
                        
                        
                        
                        
		}
		catch(MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
     
     
  }
  
  
  

  
  /*Dronelistk.addMouseListener(new MouseListener(){
  return null;
  })*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewDrone().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Dronelistk;
    private javax.swing.JButton delete_b;
    private javax.swing.JTextField holdID;
    private javax.swing.JTextField holdID2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLayeredPane lays;
    // End of variables declaration//GEN-END:variables
}
